{"mappings":"IAkBAA,E,iJAAAA,EAAA,WAeA,SAASC,EAAUC,EAAKF,EAAMG,GAC5B,IAAIC,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAOJ,GAChBE,EAAIG,aAAe,OACnBH,EAAII,OAAS,WACXC,EAAOL,EAAIM,SAAUV,EAAMG,IAE7BC,EAAIO,QAAU,WACZC,QAAQC,MAAM,4BAEhBT,EAAIU,OAGN,SAASC,EAAab,GACpB,IAAIF,EAAM,IAAIK,eAEdL,EAAIM,KAAK,OAAQJ,GAAjB,GACA,IACEF,EAAIc,OACJ,MAAOE,IACT,OAAqB,KAAdhB,EAAIiB,QAA+B,KAAdjB,EAAIiB,OAIlC,SAASC,EAAOhB,GACd,IACEA,EAAKiB,cAAc,IAAIC,WAAW,UAClC,MAAOjB,GACP,IAAIH,EAAMqB,SAASC,YAAY,eAC/BtB,EAAIuB,eAAe,SAAnB,KAAwCC,OAAQ,EAAG,EAAG,EAAG,GACnC,IADtB,WACsD,EAAG,MACzDtB,EAAKiB,cAAcnB,I,IApDnByB,EAA4B,iBAAXD,QAAuBA,OAAOA,SAAWA,OAC1DA,OAAyB,iBAATE,MAAqBA,KAAKA,OAASA,KACnDA,KAAyB,iBAAXC,GAAuBA,EAAOC,SAAWD,EACvDA,OADO,EAyDPE,EAAiBJ,EAAQK,WAAa,YAAYC,KAAKD,UAAUE,YAAc,cAAcD,KAAKD,UAAUE,aAAe,SAASD,KAAKD,UAAUE,WAEnJvB,EAASgB,EAAQQ,SAEA,iBAAXT,QAAuBA,SAAWC,EACtC,aAGD,aAAcS,kBAAkBC,YAAcN,EAC/C,SAAiB7B,EAAMoC,EAAMC,GAAM,IAC/BC,EAAMb,EAAQc,KAAOd,EAAQe,UAC7BC,EAAIpB,SAASqB,cAAc,KAC/BN,EAAOA,GAAQpC,EAAK2C,MAAQ,WAE5BF,EAAEG,SAAWR,EACbK,EAAEI,IAAM,WAKY,iBAAT7C,GAETyC,EAAEK,KAAO9C,EACLyC,EAAEM,SAAWC,SAASD,OAKxB7B,EAAMuB,GAJN1B,EAAY0B,EAAEK,MACV7C,EAASD,EAAMoC,EAAMC,GACrBnB,EAAMuB,EAAGA,EAAEQ,OAAS,YAM1BR,EAAEK,KAAOR,EAAIY,gBAAgBlD,GAC7BmD,YAAW,WAAcb,EAAIc,gBAAgBX,EAAEK,QAAS,KACxDK,YAAW,WAAcjC,EAAMuB,KAAM,KAKvC,qBAAsBX,UACtB,SAAiBuB,EAAMjB,EAAMC,GAG7B,GAFAD,EAAOA,GAAQiB,EAAKV,MAAQ,WAER,iBAATU,EAUTvB,UAAUwB,kBA1GFpD,EA0GuBmD,OAzGf,KADFrD,EA0GuBqC,GAzGRrC,EAAO,CAAEuD,SAAO,GACxB,iBAATvD,IACdY,QAAQ4C,KAAK,sDACbxD,EAAO,CAAEuD,SAAUvD,IAKjBA,EAAKuD,SAAW,6EAA6ExB,KAAK7B,EAAKuD,MAClG,IAAIC,KAAK,UAA8BxD,GAAO,CAAEuD,KAAMvD,EAAKuD,OAE7DvD,GA8FyCkC,QAT5C,GAAIrB,EAAYsC,GACdpD,EAASoD,EAAMjB,EAAMC,OAChB,CACL,IAAIC,EAAIjB,SAASqB,cAAc,KAC/BJ,EAAEQ,KAAOO,EACTf,EAAEW,OAAS,SACXE,YAAW,WAAcjC,EAAMoB,MAvGvC,IAAcpC,EAAMF,GA+GhB,SAAiBA,EAAMI,EAAMuD,EAAMvB,GASnC,IANAA,EAAQA,GAAS9B,KAAK,GAAI,aAExB8B,EAAMf,SAASuC,MACfxB,EAAMf,SAASwC,KAAKC,UAAY,kBAGd,iBAAT9D,EAAmB,OAAOC,EAASD,EAAMI,EAAMuD,GAThB,IAWtCtB,EAAsB,6BAAdrC,EAAKyD,KACbnB,EAAW,eAAeP,KAAKN,EAAQsC,cAAgBtC,EAAQuC,OAC/DvB,EAAc,eAAeV,KAAKD,UAAUE,WAEhD,IAAKS,GAAgBJ,GAASC,GAAaT,IAAyC,oBAAfoC,WAA4B,CAE/F,IAAIC,EAAS,IAAID,WACjBC,EAAOC,UAAY,WACjB,IAAIjE,EAAMgE,EAAOE,OACjBlE,EAAMuC,EAAcvC,EAAMA,EAAImE,QAAJ,eAA4B,yBAClDjC,EAAOA,EAAMY,SAASF,KAAO5C,EAC5B8C,SAAW9C,EAChBkC,EAAQ,MAEV8B,EAAOI,cAActE,OAChB,KACDuE,EAAM9C,EAAQc,KAAOd,EAAQe,UAC7BgC,EAAMD,EAAIrB,gBAAgBlD,GAC1BoC,EAAOA,EAAMY,SAAWwB,EACvBxB,SAASF,KAAO0B,EACrBpC,EAAQ,KACRe,YAAW,WAAcoB,EAAInB,gBAAgBoB,KAAQ,QAK3D/C,EAAQQ,OAASxB,EAAOwB,OAASxB,EAGdA,GAvJnB,mBAAAgE,eAAAC,IAAAD,OAAA,GAAAzE","sources":["node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["b","c1","a","c","d","XMLHttpRequest","open","responseType","onload","g1","response","onerror","console","error","send","d1","a2","status","e1","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f1","self","$parcel$global","global","a1","navigator","test","userAgent","saveAs","HTMLAnchorElement","prototype","g","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","f","msSaveOrOpenBlob","autoBom","warn","type","Blob","e","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","define","amd"],"version":3,"file":"index.c77b36fe.js.map"}